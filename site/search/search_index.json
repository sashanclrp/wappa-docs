{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Wappa - WhatsApp Business Framework","text":"<p>Modern Python library for building WhatsApp Business applications with clean architecture.</p> <p>Build WhatsApp bots in Python, fast.</p>"},{"location":"#what-is-wappa","title":"What is Wappa?","text":"<p>Wappa is an open source framework for developing smart workflows, agents, and full chat applications through WhatsApp Business API. Built with modern Python practices and clean architecture principles.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li> <p> Simple Import</p> <p>Clean, minimal interface following Single Responsibility Principle</p> <pre><code>from wappa import Wappa, WappaEventHandler\n</code></pre> </li> <li> <p> Clean Architecture</p> <p>Interface-driven design with dependency injection and SOLID principles</p> <p>Event-driven \u2022 Type-safe \u2022 Testable</p> </li> <li> <p>:iphone: Complete WhatsApp Support</p> <p>All message types, templates, interactive messages, and media handling</p> <p>Text \u2022 Images \u2022 Buttons \u2022 Lists \u2022 Templates</p> </li> <li> <p> CLI Tools</p> <p>Project scaffolding and development tools out of the box</p> <pre><code>wappa init my-bot\nwappa dev app/main.py\n</code></pre> </li> <li> <p>:puzzle: Plugin System</p> <p>Extensible architecture with <code>WappaPlugin</code> and <code>WappaBuilder</code></p> <p>Redis \u2022 CORS \u2022 Rate Limiting \u2022 Custom Plugins</p> </li> <li> <p> Multi-tenant Ready</p> <p>Built for scaling across multiple WhatsApp Business numbers</p> <p>Tenant isolation \u2022 Credential management \u2022 State separation</p> </li> </ul>"},{"location":"#quick-example","title":"Quick Example","text":"<p>Get started with a simple echo bot in under 2 minutes:</p> Simple SetupAdvanced SetupCLI Setup <pre><code>from wappa import Wappa, WappaEventHandler\nfrom wappa.webhooks import IncomingMessageWebhook\n\nclass EchoHandler(WappaEventHandler):\n    async def process_message(self, webhook: IncomingMessageWebhook) -&gt; None:\n        message_text = webhook.get_message_text()\n        user_id = webhook.user.user_id\n\n        await self.messenger.send_text(\n            recipient=user_id,\n            text=f\"\ud83d\udd04 Echo: {message_text}\"\n        )\n\napp = Wappa()\napp.set_event_handler(EchoHandler())\n\nif __name__ == \"__main__\":\n    app.run()\n</code></pre> <pre><code>from wappa import WappaBuilder\n\n# Production-ready configuration\napp = (WappaBuilder()\n       .with_whatsapp(\n           token=os.getenv(\"WP_ACCESS_TOKEN\"),\n           phone_id=os.getenv(\"WP_PHONE_ID\"),\n           business_id=os.getenv(\"WP_BID\")\n       )\n       .with_redis_cache(\"redis://localhost:6379\")\n       .with_cors_enabled()\n       .with_rate_limiting(max_requests=100, window=60)\n       .build())\n\napp.set_event_handler(MyAdvancedHandler())\napp.run()\n</code></pre> <pre><code># Initialize new project\nwappa init my-bot\ncd my-bot\n\n# Configure environment\ncp .env.example .env\n# Edit .env with your WhatsApp credentials\n\n# Run development server\nwappa dev app/main.py\n\n# Or run production server\nwappa prod app/main.py --workers 4\n</code></pre>"},{"location":"#installation","title":"Installation","text":"uv (Recommended)pipPoetry <pre><code># Create new project\nuv init my-wappa-project\ncd my-wappa-project\n\n# Add Wappa\nuv add wappa\n\n# Initialize project structure\nwappa init .\n</code></pre> <pre><code>pip install wappa\n\n# Initialize new project\nwappa init my-wappa-project\ncd my-wappa-project\n</code></pre> <pre><code>poetry new my-wappa-project\ncd my-wappa-project\npoetry add wappa\n\n# Initialize project structure  \nwappa init .\n</code></pre>"},{"location":"#architecture-highlights","title":"Architecture Highlights","text":"<pre><code>graph TD\n    A[WhatsApp User] --&gt;|Message| B[Webhook Endpoint]\n    B --&gt; C[Event Dispatcher]\n    C --&gt; D[Your Event Handler]\n    D --&gt; E[Messenger Interface]\n    E --&gt; F[WhatsApp API]\n\n    D --&gt; G[State Management]\n    D --&gt; H[Business Logic]\n    G --&gt; I[Redis/Memory/JSON Cache]\n    H --&gt; J[External Services]\n\n    style D fill-opacity:0.2,fill:#333481,color:#333,stroke:#333481,stroke-width:3px\n    style E fill-opacity:0.2,fill:#4A90E2,color:#333,stroke:#4A90E2,stroke-width:3px\n    style G fill-opacity:0.2,fill:#333481,color:#333,stroke:#333481,stroke-width:3px\n    style A fill-opacity:0.2,fill:#25D366,color:#333,stroke:#25D366,stroke-width:3px\n    style F fill-opacity:0.2,fill:#25D366,color:#333,stroke:#25D366,stroke-width:3px\n    style B fill-opacity:0.15,fill:#333481,color:#333,stroke:#333481,stroke-width:3px\n    style C fill-opacity:0.15,fill:#333481,color:#333,stroke:#333481,stroke-width:3px\n    style H fill-opacity:0.15,fill:#4A90E2,color:#333,stroke:#4A90E2,stroke-width:3px\n    style I fill-opacity:0.15,fill:#25D366,color:#333,stroke:#25D366,stroke-width:3px\n    style J fill-opacity:0.15,fill:#4A90E2,color:#333,stroke:#4A90E2,stroke-width:3px</code></pre> <ul> <li>Event-Driven: Webhook \u2192 Event Handler \u2192 Response</li> <li>Type-Safe: Full Pydantic models for all WhatsApp data structures  </li> <li>FastAPI Core: Built on modern async Python with automatic OpenAPI docs</li> <li>Production Ready: Docker support, Redis caching, structured logging</li> </ul>"},{"location":"#whats-next","title":"What's Next?","text":"<ul> <li> <p>\ud83d\ude80 Quick Start</p> <p>Get a WhatsApp bot running in 5 minutes</p> </li> <li> <p>\ud83d\udcf1 First App Tutorial</p> <p>Build a complete customer support bot</p> </li> <li> <p>\ud83c\udfd7\ufe0f Architecture Guide</p> <p>Understand clean architecture principles</p> </li> <li> <p>\ud83d\udcda API Reference</p> <p>Complete API documentation</p> </li> <li> <p>\ud83d\udee0\ufe0f Setup WhatsApp API</p> <p>Configure WhatsApp Business API</p> </li> <li> <p>\ud83d\ude82 Deploy to Railway</p> <p>Production deployment guide</p> </li> </ul>"},{"location":"#community-support","title":"Community &amp; Support","text":"<ul> <li>GitHub Repository - Source code and issues</li> <li>Example Projects - 6 complete example applications</li> <li>Migration Guide - Version updates and changelog</li> </ul> <p>Built with \u2764\ufe0f by Mimeia \u2022 Open Source \u2022 MIT License</p>"},{"location":"first-app/","title":"Build Your First WhatsApp Bot","text":"<p>Placeholder for complete tutorial building a customer support bot</p>"},{"location":"first-app/#project-overview","title":"Project Overview","text":"<p>We'll build a Customer Support Bot with: - \ud83e\udd16 Automated greetings - \ud83d\udccb Interactive menus - \ud83d\udce7 Contact form collection - \ud83c\udfab Ticket creation - \ud83d\udcca Basic analytics</p> <p>Coming soon - complete step-by-step tutorial.</p>"},{"location":"installation/","title":"Installation Guide","text":"<p>Placeholder for detailed installation instructions</p>"},{"location":"installation/#system-requirements","title":"System Requirements","text":"<ul> <li>Python 3.12+</li> <li>WhatsApp Business API credentials</li> <li>Optional: Redis for caching</li> </ul>"},{"location":"installation/#installation-methods","title":"Installation Methods","text":""},{"location":"installation/#using-uv-recommended","title":"Using uv (Recommended)","text":"<pre><code>uv add wappa\n</code></pre>"},{"location":"installation/#using-pip","title":"Using pip","text":"<pre><code>pip install wappa\n</code></pre>"},{"location":"installation/#using-poetry","title":"Using Poetry","text":"<pre><code>poetry add wappa\n</code></pre>"},{"location":"installation/#next-steps","title":"Next Steps","text":"<p>Continue to Quick Start to build your first bot.</p>"},{"location":"quickstart/","title":"Quick Start Guide","text":"<p>Get a WhatsApp bot running in 5 minutes.</p>"},{"location":"quickstart/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.12+</li> <li>WhatsApp Business API credentials</li> <li>uv or pip package manager</li> </ul>"},{"location":"quickstart/#step-1-installation","title":"Step 1: Installation","text":"<pre><code># Using uv (recommended)\nuv add wappa\n\n# Or using pip\npip install wappa\n</code></pre>"},{"location":"quickstart/#step-2-get-whatsapp-credentials","title":"Step 2: Get WhatsApp Credentials","text":"<ol> <li>Go to Meta for Developers</li> <li>Create WhatsApp Business App</li> <li>Get your credentials:</li> <li>Access Token</li> <li>Phone Number ID</li> <li>Business Account ID</li> </ol>"},{"location":"quickstart/#step-3-create-project","title":"Step 3: Create Project","text":"<pre><code># Initialize new project\nwappa init my-bot\ncd my-bot\n\n# Create .env file\nWP_ACCESS_TOKEN=your_access_token\nWP_PHONE_ID=your_phone_number_id\nWP_BID=your_business_id\n</code></pre>"},{"location":"quickstart/#step-4-simple-echo-bot","title":"Step 4: Simple Echo Bot","text":"<p>Create <code>main.py</code>:</p> <pre><code>from wappa import Wappa, WappaEventHandler\nfrom wappa.webhooks import IncomingMessageWebhook\n\nclass EchoBot(WappaEventHandler):\n    async def process_message(self, webhook: IncomingMessageWebhook) -&gt; None:\n        # Get message details\n        user_id = webhook.user.user_id\n        message_text = webhook.get_message_text()\n\n        # Send echo response\n        result = await self.messenger.send_text(\n            recipient=user_id,\n            text=f\"\ud83d\udd04 You said: {message_text}\"\n        )\n\n        if result.success:\n            self.logger.info(f\"Echo sent: {result.message_id}\")\n\n# Create and run app\napp = Wappa()\napp.set_event_handler(EchoBot())\n\nif __name__ == \"__main__\":\n    app.run()\n</code></pre>"},{"location":"quickstart/#step-5-run-your-bot","title":"Step 5: Run Your Bot","text":"<pre><code>uv run python main.py\n</code></pre>"},{"location":"quickstart/#step-6-test-it","title":"Step 6: Test It","text":"<ol> <li>Send a message to your WhatsApp Business number</li> <li>Bot should echo your message back</li> <li>Check logs for processing details</li> </ol>"},{"location":"quickstart/#next-steps","title":"Next Steps","text":"<ul> <li>Complete Installation Guide</li> <li>Build Your First App</li> <li>Understanding Architecture</li> </ul>"}]}